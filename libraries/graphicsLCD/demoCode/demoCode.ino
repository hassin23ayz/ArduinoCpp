#include <graphicsLCD.h>

const unsigned char LOGO [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0F, 0x1F,
0x1F, 0x3F, 0x7F, 0xFB, 0xF3, 0xF3, 0x83, 0xC3, 0xC3, 0xC3, 0x83, 0xE3, 0xFB, 0xFF, 0x7F, 0x3F,
0x1F, 0xF3, 0xFB, 0xFB, 0xF3, 0xC3, 0xF3, 0xFB, 0xFB, 0x3F, 0x1F, 0x0F, 0x07, 0x87, 0xFB, 0xFF,
0xFF, 0x7B, 0x73, 0xFB, 0xFB, 0xF3, 0xE3, 0xC3, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x83, 0x83,
0x83, 0x03, 0x03, 0x03, 0x03, 0xE3, 0xFF, 0xFF, 0xFF, 0x7E, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xFC, 0xFC, 0xF8, 0xE0, 0xF0, 0xF8,
0xFC, 0xFE, 0x1E, 0x0F, 0x0F, 0x07, 0x07, 0x07, 0xD7, 0xFF, 0xFF, 0xFF, 0x3F, 0x03, 0x00, 0x00,
0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x81, 0x07, 0x8F, 0x9F, 0x1E, 0x8F, 0xCF, 0xF6, 0xFB, 0xFF, 0x3B,
0x39, 0xEC, 0xFF, 0xFF, 0x6F, 0x03, 0x01, 0x00, 0x0C, 0x1E, 0x3E, 0x7E, 0x7F, 0x3F, 0x1F, 0x0F,
0x03, 0x03, 0x67, 0xFC, 0xFE, 0xFF, 0xFF, 0x3F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x81, 0x80,
0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0xE0, 0xF8, 0xFF, 0x3F, 0x3F, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x03, 0x07, 0x07, 0x07, 0x0F, 0x0F, 0x0F, 0x07, 0x07, 0x07, 0x03, 0x01, 0x00, 0x3C,
0x7F, 0x7F, 0x3F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0D, 0x1F, 0x1F, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x1F, 0x3F, 0x7F,
0x7B, 0x7B, 0x7F, 0x3F, 0x3F, 0x1F, 0x0F, 0x0F, 0x1E, 0xFE, 0xFC, 0xFC, 0xF8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 
};

byte lcd_x = 0;
byte lcd_y = 0;

#define lcd_RST_pin 2
#define lcd_CS_pin 16
#define lcd_DIN_pin 18
#define lcd_CLK_pin 19

graphicsLCD lcd(lcd_RST_pin,lcd_CS_pin,lcd_DIN_pin,lcd_CLK_pin);/*
/*
#define lcd_RST_pin 16
#define lcd_CS_pin 2
#define lcd_DIN_pin 18
#define lcd_CLK_pin 19

graphicsLCD lcd(3,4,5,6);
*/
void setup() {

  
lcd.begin();
lcd.clear();

// display the logo 
for (int index = 0; index < 96*6; index++)
  { 
  {lcd.data( LOGO[index]);}
  }

delay(3000);
// make the display inverse
lcd.displayInverse();
delay(3000);
// make the display normal
lcd.displayNormal();
delay(3000);


//change the contrast ratio to maximum
for( int darkness=0 ; darkness<32; darkness++)
{
  lcd.contrast(darkness);
  delay(100);
}

//change the contrast ratio to minimum
for( int darkness=32 ; darkness>1; darkness--)
{
  lcd.contrast(darkness);
  delay(100);
}

lcd.clear();
lcd.print("Turning on ALL  PIXELS");
delay(5000);
lcd.displayAllPointsOn();
lcd.line(0);
lcd.println("Turning off ALL  PIXELS");
delay(1000);
lcd.displayAllPointsOff();
delay(1000);

//jump between lines
lcd.clear();
lcd.line(0);
lcd.print("This is line 0");
delay(1000);
lcd.line(3);
lcd.print("This is line 3");
delay(1000);
lcd.line(7);
lcd.print("This is line 7");
delay(1000);

lcd.clear();
delay(1000);
lcd.line(0);
lcd.print("characters");
lcd.line(2);
lcd.print("int ");
lcd.print(12345678);
lcd.line(4);
lcd.print("long number ");
long num = 0.4545;
lcd.print(num);
}

void loop() {

}
void Lcd_set_pos_pix(byte c, byte r){

lcd_x = c;
  lcd_y = r;
  lcd.command(0xB0 | (r & 0x0F));
  lcd.command(0x10 | ((c >> 4) & 0x07));
  lcd.command(0x00 | (c & 0x0F));
}
